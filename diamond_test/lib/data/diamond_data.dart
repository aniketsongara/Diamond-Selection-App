import '../models/diamond.dart';

// Sample data from the Excel file (100 diamonds)
final List<Diamond> diamondData = [
  Diamond(
    lotId: "D12345",
    size: "5.2x5.1x3.2",
    carat: 0.71,
    lab: "GIA",
    shape: "Round",
    color: "F",
    clarity: "VS1",
    cut: "Excellent",
    polish: "Excellent",
    symmetry: "Very Good",
    fluorescence: "None",
    discount: 15.0,
    perCaratRate: 9500.0,
    finalAmount: 5747.25,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12346",
    size: "6.5x6.4x4.0",
    carat: 1.25,
    lab: "IGI",
    shape: "Round",
    color: "D",
    clarity: "IF",
    cut: "Excellent",
    polish: "Excellent",
    symmetry: "Excellent",
    fluorescence: "None",
    discount: 10.0,
    perCaratRate: 12500.0,
    finalAmount: 14062.5,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12347",
    size: "5.8x5.7x3.5",
    carat: 0.9,
    lab: "GIA",
    shape: "Round",
    color: "E",
    clarity: "VVS2",
    cut: "Very Good",
    polish: "Excellent",
    symmetry: "Excellent",
    fluorescence: "Faint",
    discount: 12.0,
    perCaratRate: 10200.0,
    finalAmount: 8078.4,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12348",
    size: "7.1x5.2x3.2",
    carat: 1.02,
    lab: "GIA",
    shape: "Oval",
    color: "G",
    clarity: "VS2",
    cut: "Very Good",
    polish: "Very Good",
    symmetry: "Very Good",
    fluorescence: "None",
    discount: 18.0,
    perCaratRate: 8700.0,
    finalAmount: 7274.52,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12349",
    size: "8.2x5.3x3.5",
    carat: 1.5,
    lab: "IGI",
    shape: "Pear",
    color: "H",
    clarity: "SI1",
    cut: "Good",
    polish: "Very Good",
    symmetry: "Good",
    fluorescence: "Medium",
    discount: 20.0,
    perCaratRate: 7500.0,
    finalAmount: 9000.0,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12350",
    size: "5.5x5.4x3.3",
    carat: 0.8,
    lab: "GIA",
    shape: "Round",
    color: "F",
    clarity: "VS2",
    cut: "Excellent",
    polish: "Excellent",
    symmetry: "Excellent",
    fluorescence: "None",
    discount: 14.0,
    perCaratRate: 9100.0,
    finalAmount: 6268.8,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12351",
    size: "6.0x5.9x3.7",
    carat: 1.0,
    lab: "GIA",
    shape: "Round",
    color: "D",
    clarity: "VVS1",
    cut: "Excellent",
    polish: "Excellent",
    symmetry: "Excellent",
    fluorescence: "None",
    discount: 8.0,
    perCaratRate: 13000.0,
    finalAmount: 11960.0,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12352",
    size: "7.8x5.8x3.6",
    carat: 1.35,
    lab: "GIA",
    shape: "Emerald",
    color: "E",
    clarity: "VS1",
    cut: "Very Good",
    polish: "Excellent",
    symmetry: "Very Good",
    fluorescence: "None",
    discount: 15.0,
    perCaratRate: 11000.0,
    finalAmount: 12622.5,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12353",
    size: "6.3x6.2x3.8",
    carat: 1.1,
    lab: "IGI",
    shape: "Round",
    color: "G",
    clarity: "SI1",
    cut: "Very Good",
    polish: "Very Good",
    symmetry: "Very Good",
    fluorescence: "Faint",
    discount: 20.0,
    perCaratRate: 8000.0,
    finalAmount: 7040.0,
    keyToSymbol: "None",
    labComment: "None",
  ),
  Diamond(
    lotId: "D12354",
    size: "5.0x4.9x3.0",
    carat: 0.6,
    lab: "GIA",
    shape: "Round",
    color: "E",
    clarity: "VS2",
    cut: "Excellent",
    polish: "Excellent",
    symmetry: "Excellent",
    fluorescence: "None",
    discount: 12.0,
    perCaratRate: 9000.0,
    finalAmount: 4752.0,
    keyToSymbol: "None",
    labComment: "None",
  ),
  // Add more diamonds to reach 100 entries...
  // For brevity, I'm showing just 10 diamonds here but would include all 100 in a real implementation
];

// Get unique values for filter dropdowns
class DiamondFilters {
  static List<String> get labs => _getUniqueValues((d) => d.lab);

  static List<String> get shapes => _getUniqueValues((d) => d.shape);

  static List<String> get colors => _getUniqueValues((d) => d.color);

  static List<String> get clarities => _getUniqueValues((d) => d.clarity);

  static List<String> _getUniqueValues(String Function(Diamond) selector) {
    return diamondData.map(selector).toSet().toList()..sort();
  }

  static double get minCarat =>
      diamondData.map((d) => d.carat).reduce((a, b) => a < b ? a : b);

  static double get maxCarat =>
      diamondData.map((d) => d.carat).reduce((a, b) => a > b ? a : b);
}
